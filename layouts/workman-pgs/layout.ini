;
; Keyboard Layout definition for
; Portable Keyboard Layout 
; http://pkl.sourceforge.net
;

[informations]
layoutname           = PGS's Programmer Workman
layoutcode           = Workman
localeid             = 00000409

copyright            = GNU General Public License v3.0
company              = Pgsuarez
homepage             = https://github.com/Pgsuarez/portable-keyboard-layout-workman-pgs
version              = 1.0

generated_at         = Thu Jul 20 19:13:00 2017
generated_from       = Workman.klc
modified_after_generate = yes


[global]
; You can set an extend key:
extend_key = CapsLock
; Hold it to use the "extend"-remap-section in this file or in pkl.ini

; Shiftstates (like in Microsoft Keyboard Layout Creator)
; 	0 = normal
; 	1 = Shift
; 	2 = Ctrl
; 	6 = AltGr
; 	7 = AltGr + Shift
shiftstates = 0:1:2:6:7
; The dimensions of the helper images
; stateX.png (see previous values), extend.png, deadkeyXX.png
img_width = 296
img_height = 102


[fingers]
; Fingers:
; 	Left hand:  1 2 3 4
; 	Right hand: 5 6 7 8
; 	Disabled: 0
; 	Two (or more) finger: 9
; The first value of row3 is the 102nd key! (The left shift is automatic finger "1")
row1 = 1112344567888
row2 = 1123445567888
row3 = 1123445567888
row4 = 12344155678
; Enter mode: where is the SC02b key (QWERTY's \|)
; 0 = on first row, beside the Backspace
; 1 = on second row, like on english layout (the default)
; 2 = on third row, beside the Enter
enter_mode = 2

[layout]
; Scan code =
; 	Virtual key (like in MS KLC)
; 	CapsState (like in MS KLC)
; 		If CapsState == vk or VirtualKey
; 			When you press this key, it sends only the virtual key.
; 			It is very useful, if you install your special layout, and you 
; 			would like to extend it. (See extend_* layouts)
; 		Else If CapsState == modifier
; 			You can use this key as a modifier, like Shift, RAlt (== AltGr)
; 			See DDvorak or ENTI-key++ layouts
; 		Else If CapsState & 1 == 1
; 			Shift + Button == CapsLock + Button
; 		Else If CapsState & 4 == 4
; 			AltGr + Shift + Button == CapsLock + AltGr + Button
;		Here I tested that	1 => CapsLock works with Key
;					4 => CapsLock works with AltGr + Key
;					5 => CapsLock works with Key or AltGr + Key

; 	The value of states
; 		It is one or more utf-8 character (one character or ligature)
; 		Or it is "--" if disabled
; 		Or it begins with * if you would like keep it as it is
; 			See http://www.autohotkey.com/docs/commands/Send.htm
; 		Or it begins with = if you would like set it to {Blind}
; 			See http://www.autohotkey.com/docs/commands/Send.htm
; 		Or it begins with % if it is an utf ligature
; 		Or it is dkXX: this is a deadkey
; 	Please, use tabs as separator for these values


;scan = VK   CapState  0Norm   1Sh     2Ctrl  6AGr  Caps        CapsSh
;SC003 = x	8	*VERY	*GOOD	--	--	{=}Caps{!}	*{=}CapsSHift{!}	; QWERTY 2@
;SC005 = 4	8	4	$	<	>	(	)	; QWERTY 4$
;SC004 = 3	8	*DO	*HOWDY	*==	/	\	*{home}{home}+{end}^c{end}	;

;scan = VK	CapStat	0Norm	1Sh	2Ctrl	6AGr	7AGrSh	Caps	CapsSh
; SC001 = ESCAPE	0	={Escape}	={Escape}	={Escape}	={Escape}	={Escape}; Escape
; SC03b = F1	VirtualKey ; F1
; SC03c = F2	VirtualKey ; F2
; SC03d = F3	VirtualKey ; F3
; SC03e = F4	VirtualKey ; F4
; SC03f = F5	VirtualKey ; F5
; SC040 = F6	VirtualKey ; F6
; SC041 = F7	VirtualKey ; F7
; SC042 = F8	VirtualKey ; F8
; SC043 = F9	VirtualKey ; F9
; SC044 = F10	VirtualKey ; F10
; SC057 = F11	VirtualKey ; F11
; SC058 = F12	VirtualKey ; F12
; SC137 = SNAPSHOT	 ; Print Screen
; SC054 = SysRq	 VirtualKey; SysReq
; SC046 = SCROLL	VirtualKey ; Scroll Lock
; SC045 = PAUSE	VirtualKey ; Pause
; SC145 = CANCEL	VirtualKey ; Break
SC029 = OEM_3	0	¬	~	--	¦	--	; QWERTY `~
SC002 = 1	1	@	1	--	--	--	; QWERTY 1!
SC003 = 2	1	$	2	--	--	--	; QWERTY 2@
SC004 = 3	1	!	3	--	¡	--	; QWERTY 3#
SC005 = 4	1	%	4	--	€	--	; QWERTY 4$
SC006 = 5	1	&	5	--	--	--	; QWERTY 5%
SC007 = 6	1	|	6	--	\	--	; QWERTY 6^
SC008 = 7	1	^	7	--	--	--	; QWERTY 7&
SC009 = 8	1	(	8	--	--	--	; QWERTY 8*
SC00a = 9	1	)	9	--	--	--	; QWERTY 9(
SC00b = 0	1	*	0	--	--	--	; QWERTY 0)
SC00c = OEM_MINUS	0	-	_	--	--	--	; QWERTY -_
SC00d = OEM_PLUS	0	=	+	--	--	--	; QWERTY =+
; SC00e = BACK	0	VirtualKey	; QWERTY Backspace
; SC00f = TAB	0	VirtualKey	; QWERTY Tab
SC010 = Q	5	q	Q	--	--	--	; QWERTY qQ
SC011 = D	5	d	D	--	--	--	; QWERTY wW
SC012 = R	5	r	R	--	--	--	; QWERTY eE
SC013 = W	5	w	W	--	--	--	; QWERTY rR
SC014 = B	1	b	B	--	--	--	; QWERTY tT
SC015 = J	5	j	J	--	--	--	; QWERTY yY
SC016 = F	5	f	F	--	--	--	; QWERTY uU
SC017 = U	5	u	U	--	ú	Ú	; QWERTY iI
SC018 = P	5	p	P	--	--	--	; QWERTY oO
SC019 = OEM_1	4	;	:	--	--	--	; QWERTY pP
SC01a = OEM_4	0	{	[	--	--	--	; QWERTY [{
SC01b = OEM_6	0	}	]	--	--	--	; QWERTY ]}
; SC01c = RETURN	VirtualKey ; Enter
; SC03A = CAPITAL	0	*{CapsLock}	*{CapsLock}	*{CapsLock}	--	--	; Caps Lock
SC01e = A	5	a	A	--	á	Á	; QWERTY aA
SC01f = S	1	s	S	--	--	--	; QWERTY sS
SC020 = H	5	h	H	--	--	--	; QWERTY dD
SC021 = T	5	t	T	--	--	--	; QWERTY fF
SC022 = G	1	g	G	--	--	--	; QWERTY gG
SC023 = Y	1	y	Y	--	--	--	; QWERTY hH
SC024 = N	5	n	N	--	ñ	Ñ	; QWERTY jJ
SC025 = E	5	e	E	--	é	É	; QWERTY kK
SC026 = O	5	o	O	--	ó	Ó	; QWERTY lL
SC027 = I	5	i	I	--	í	Í	; QWERTY ;: (ñÑ)
SC028 = OEM_7	4	'	"	--	--	--	; QWERTY '"
SC02b = OEM_5	0	`	#	--	dk1	--	; QWERTY \|
; SC02a = LSHIFT	VirtualKey ; LShift
SC056 = Z	1	z	Z	--	--	--	; QWERTY OEM_102
SC02c = X	5	x	X	--	--	--	; QWERTY zZ
SC02d = M	1	m	M	--	--	--	; QWERTY xX
SC02e = C	5	c	C	--	--	--	; QWERTY cC
SC02f = V	5	v	V	--	--	--	; QWERTY vV
SC030 = OEM_102	1	--	--	--	--	--	; QWERTY bB
SC031 = K	1	k	K	--	--	--	; QWERTY nN
SC032 = L	5	l	L	--	--	--	; QWERTY mM
SC033 = OEM_COMMA	4	,	<	--	--	; QWERTY ,<
SC034 = OEM_PERIOD	4	.	>	--	--	; QWERTY .>
SC035 = OEM_2	0	?	/	--	¿	--	; QWERTY /?
; SC036 = RSHIFT	VirtualKey ; RShift
; SC01d = LCONTROL	VirtualKey ; LControl
; SC15b = LWIN	VirtualKey ; LWin
; SC038 = LMenu	VirtualKey ; LAlt
; SC039 = SPACE	0	={space}	={space}	--	={space}	; QWERTY Space
; SC138 = RMenu	VirtualKey ; RAlt
; SC15d = APPS	VirtualKey ; Context menu
; SC11d = RCONTROL	VirtualKey ; RControl
; SC152 = INSERT	VirtualKey ; Insert
; SC153 = DELETE	VirtualKey ; Del
; SC147 = HOME	VirtualKey ; Home
; SC14f = END	VirtualKey ; End
; SC149 = PRIOR	VirtualKey ; Page up
; SC151 = NEXT	VirtualKey ; Page down
; SC148 = UP	VirtualKey ; Up arrow
; SC14b = LEFT	VirtualKey ; Left arrow
; SC150 = DOWN	VirtualKey ; Down arrow
; SC14d = RIGHT	VirtualKey ; Right arrow
; SC052 = NUMPAD0	VirtualKey ; Num0
; SC04f = NUMPAD1	VirtualKey ; Num1
; SC050 = NUMPAD2	VirtualKey ; Num2
; SC051 = NUMPAD3	VirtualKey ; Num3
; SC04b = NUMPAD4	VirtualKey ; Num4
; SC04c = NUMPAD5	VirtualKey ; Num5
; SC04d = NUMPAD6	VirtualKey ; Num6
; SC047 = NUMPAD7	VirtualKey ; Num7
; SC048 = NUMPAD8	VirtualKey ; Num8
; SC049 = NUMPAD9	VirtualKey ; Num9
; SC145 = NUMLOCK	VirtualKey ; NumLock
; SC035 = DIVIDE	VirtualKey ; Num /
; SC037 = MULTIPLY	VirtualKey ; Num *
; SC04a = SUBTRACT	VirtualKey ; Num -
; SC04e = ADD	VirtualKey ; Num +
SC053 = DECIMAL	0	*{NumpadDot}	*{NumpadDot}	--	€	--	; Num decimal
; SC15e = Power	VirtualKey ; Power
; SC15f = SLEEP	VirtualKey ; Sleep
; SC163 = Wake	VirtualKey ; Wake



[deadkey1]
; 0 = unicode number of the "accent"
0    =  168	; ¨
; [Unicode number of the base letter] = [Unicode number of the new letter] <tab> ; comments
85   =  220	; U -> Ü
117  =  252	; u -> ü
168  =  168	; ¨ -> ¨
160  =  168	; Tab -> ¨
32   =  168	; Space -> ¨